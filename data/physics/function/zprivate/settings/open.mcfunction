tellraw @s [{text:"Physics >> ",color:"#99EAD6"},{text:"Settings",color:"yellow"}]

# React to block updates
execute unless score #Physics.Settings.ReactToBlockUpdates Physics matches 1 run tellraw @s ["",{text:"React to block updates: ",color:"dark_aqua"},{text:"[Off]",color:"green",click_event:{action:"run_command",command:"function physics:settings/react_to_block_updates/off"},hover_event:{action:"show_text",value:[{text:"Physics objects will not react to blocks getting removed or changing block states while being collided with."},{text:"\n\nClick to select!",color:"yellow"}]}},{text:" "},{text:"[On]",click_event:{action:"run_command",command:"function physics:settings/react_to_block_updates/on"},hover_event:{action:"show_text",value:[{text:"Physics objects will properly react to blocks getting removed or changing block states while being collided with."},{text:"\n\nClick to select!",color:"yellow"}]}}]
execute if score #Physics.Settings.ReactToBlockUpdates Physics matches 1 run tellraw @s ["",{text:"React to block updates: ",color:"dark_aqua"},{text:"[Off]",click_event:{action:"run_command",command:"function physics:settings/react_to_block_updates/off"},hover_event:{action:"show_text",value:[{text:"Physics objects will not react to blocks getting removed or changing block states while being collided with."},{text:"\n\nClick to select!",color:"yellow"}]}},{text:" "},{text:"[On]",color:"green",click_event:{action:"run_command",command:"function physics:settings/react_to_block_updates/on"},hover_event:{action:"show_text",value:[{text:"Physics objects will properly react to blocks getting removed or changing block states while being collided with."},{text:"\n\nClick to select!",color:"yellow"}]}}]

# Default gravity
$tellraw @s ["",{text:"Default gravity: ",color:"dark_aqua"},{text:"[$(DefaultGravity)]",click_event:{action:"suggest_command",command:"/function physics:settings/default_gravity {Value:$(DefaultGravity)}"},hover_event:{action:"show_text",value:[{text:"Physics objects without their own gravity attribute will use this as their gravity value.\n\nDefault: -490 (-0.49 blocks/tick^2)"},{text:"\n\nClick to modify!",color:"yellow"}]}}]

# Linear damping
$tellraw @s ["",{text:"Linear damping: ",color:"dark_aqua"},{text:"[$(LinearDamping)]",click_event:{action:"suggest_command",command:"/function physics:settings/linear_damping {Value:$(LinearDamping)}"},hover_event:{action:"show_text",value:[{text:"Physics object linear velocity gets multiplied by this value each tick to emulate drag.\n\nDefault: 98 (0.98x)"},{text:"\n\nClick to modify!",color:"yellow"}]}}]

# Angular damping
$tellraw @s ["",{text:"Angular damping: ",color:"dark_aqua"},{text:"[$(AngularDamping)]",click_event:{action:"suggest_command",command:"/function physics:settings/angular_damping {Value:$(AngularDamping)}"},hover_event:{action:"show_text",value:[{text:"Physics object angular velocity gets multiplied by this value each tick to emulate drag.\n\nDefault: 98 (0.98x)"},{text:"\n\nClick to modify!",color:"yellow"}]}}]

# Min penetration depth
$tellraw @s ["",{text:"Minimum penetration depth: ",color:"dark_aqua"},{text:"[$(MinPenetrationDepth)]",click_event:{action:"suggest_command",command:"/function physics:settings/min_penetration_depth {Value:$(MinPenetrationDepth)}"},hover_event:{action:"show_text",value:[{text:"To improve stability, contact data for collisions will be kept if the penetration depth is within this threshold, so minor movement will not throw away data that might be relevant in the next tick.\n\nDefault: -50 (-0.05 blocks)"},{text:"\n\nClick to modify!",color:"yellow"}]}}]
